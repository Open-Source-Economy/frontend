import React from "react";
import { Button } from "src/components";
import DonationSelector from "./DonationSelector";

interface DonationControlsProps {
  selectedAmount: number;
  setSelectedAmount: React.Dispatch<React.SetStateAction<number>>;
  customAmount: string;
  setCustomAmount: React.Dispatch<React.SetStateAction<string>>;
  donationType: "once" | "monthly";
  setDonationType: React.Dispatch<React.SetStateAction<"once" | "monthly">>;
}

const DonationControls: React.FC<DonationControlsProps> = ({
  selectedAmount,
  setSelectedAmount,
  customAmount,
  setCustomAmount,
  donationType,
  setDonationType,
}) => {
  const handleCustomAmountChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const value = e.target.value.replace(/[^0-9]/g, "");
    setCustomAmount(value);
    if (value) {
      setSelectedAmount(parseInt(value, 10));
    }
  };

  const amountsOnce = [
    { value: 25, label: "For individual" },
    { value: 50, label: "For small companies" },
    { value: 100, label: "For small companies" },
    { value: 250, label: "For small companies" },
    { value: 1000, label: "For small companies" },
  ];
  const amountsMonthly = [
    { value: 20, label: "For individual" },
    { value: 200, label: "For small companies" },
    { value: 500, label: "For medium companies" },
    { value: 1000, label: "For big companies" },
    { value: 2000, label: "AMAZING!!!" },
  ];
  const amounts = donationType === "once" ? amountsOnce : amountsMonthly;

  return (
    <>
      <div className="space-y-4">
        <div className="flex !flex-wrap relative sm:!flex-nowrap !gap-5">
          <Button
            onClick={() => setDonationType("once")}
            parentClassName="w-full"
            className="!w-full"
            audience={donationType === "once" ? "ALL" : "USER"}
            level={donationType === "once" ? "PRIMARY" : "SECONDARY"}
            size="LARGE"
          >
            Give Once
          </Button>
          {donationType === "once" && (
            <span className="absolute -right-8 2xl:-right-10 3xl:-right-11 top-[90%] sm:top-[40%] xl:top-1/2">
              <svg xmlns="http://www.w3.org/2000/svg" width="49" height="57" viewBox="0 0 49 57" fill="none">
                <path
                  d="M22.4532 56.4965C22.098 56.7101 21.6448 56.5911 21.4409 56.2309C21.2371 55.8706 21.3598 55.4054 21.715 55.1919L22.4532 56.4965ZM38.5663 33.741L39.2952 33.591L38.5663 33.741ZM30.8594 36.8197L31.1482 36.1171L30.8594 36.8197ZM22.3451 2.7844C22.2948 2.36954 22.5834 1.98674 22.9899 1.9294L29.6136 0.994981C30.0201 0.937641 30.3904 1.22747 30.4407 1.64233C30.4911 2.05719 30.2024 2.43999 29.7959 2.49733L23.9082 3.32792L24.6376 9.33732C24.688 9.75218 24.3993 10.135 23.9928 10.1923C23.5864 10.2497 23.216 9.95983 23.1657 9.54496L22.3451 2.7844ZM24.6791 2.98964C24.9967 3.24943 25.0446 3.72633 24.786 4.05482C24.5274 4.38331 24.0603 4.43899 23.7427 4.1792L24.6791 2.98964ZM25.8923 6.01902C25.5865 5.74485 25.5595 5.26595 25.8319 4.94935C26.1044 4.63276 26.5731 4.59836 26.8789 4.87253L25.8923 6.01902ZM28.9899 6.86002C29.2821 7.14927 29.2863 7.62929 28.9992 7.93215C28.7122 8.23502 28.2427 8.24605 27.9505 7.95679L28.9899 6.86002ZM29.902 9.99479C29.6256 9.68975 29.6466 9.20983 29.9488 8.92287C30.2511 8.63591 30.7201 8.65058 30.9965 8.95562L29.902 9.99479ZM32.895 11.1798C33.1529 11.5013 33.1041 11.9795 32.786 12.2478C32.4678 12.5161 32.0008 12.4729 31.7429 12.1513L32.895 11.1798ZM33.4408 14.417C33.2046 14.0783 33.2843 13.604 33.6189 13.3577C33.9534 13.1113 34.4162 13.1861 34.6524 13.5248L33.4408 14.417ZM36.2388 15.9864C36.4495 16.3425 36.3356 16.8099 35.9844 17.0304C35.6332 17.2509 35.1776 17.141 34.9669 16.7849L36.2388 15.9864ZM36.3071 19.2816C36.1271 18.908 36.2795 18.4517 36.6474 18.2623C37.0152 18.073 37.4594 18.2223 37.6394 18.5959L36.3071 19.2816ZM38.7985 21.3286C38.9414 21.719 38.7461 22.1584 38.3623 22.31C37.9784 22.4616 37.5514 22.2681 37.4085 21.8777L38.7985 21.3286ZM38.2256 24.5683C38.1284 24.1629 38.3722 23.7491 38.7701 23.644C39.168 23.5389 39.5693 23.7824 39.6664 24.1878L38.2256 24.5683ZM40.1685 27.1662C40.2076 27.5825 39.9089 27.9572 39.5012 28.0031C39.0935 28.049 38.7312 27.7488 38.6921 27.3325L40.1685 27.1662ZM38.7127 30.1097C38.7495 29.6921 39.11 29.3794 39.5179 29.4111C39.9258 29.4429 40.2267 29.8071 40.1899 30.2247L38.7127 30.1097ZM39.5509 33.273C39.411 33.6686 38.9856 33.8778 38.6006 33.7403C38.2157 33.6028 38.017 33.1707 38.1569 32.7751L39.5509 33.273ZM36.8718 35.0482C37.1472 34.7342 37.6162 34.7045 37.9193 34.9817C38.2225 35.259 38.2449 35.7382 37.9695 36.0521L36.8718 35.0482ZM35.2593 37.8642C34.8668 37.9896 34.4537 37.7673 34.3366 37.3677C34.2194 36.9682 34.4427 36.5426 34.8351 36.4172L35.2593 37.8642ZM32.3837 36.5066C32.7839 36.5903 33.0373 36.9907 32.9499 37.4011C32.8624 37.8115 32.4672 38.0763 32.067 37.9927L32.3837 36.5066ZM29.1812 36.8664C28.8202 36.6738 28.6843 36.2162 28.8777 35.8443C29.0712 35.4724 29.5206 35.327 29.8816 35.5196L29.1812 36.8664ZM27.6633 33.936C27.9553 34.2255 27.9591 34.7055 27.6719 35.0082C27.3847 35.3108 26.9152 35.3216 26.6232 35.0321L27.6633 33.936ZM24.8983 32.2145C24.7866 31.8132 25.0156 31.3908 25.4096 31.2709C25.8037 31.1511 26.2137 31.3793 26.3253 31.7806L24.8983 32.2145ZM26.4693 29.328C26.3155 29.7184 25.8832 29.9118 25.5036 29.76C25.1239 29.6083 24.9409 29.1688 25.0946 28.7785L26.4693 29.328ZM27.1003 26.0882C27.4231 25.8258 27.8892 25.8776 28.1413 26.204C28.3934 26.5304 28.3362 27.0077 28.0134 27.2702L27.1003 26.0882ZM30.3453 26.136C29.9437 26.2243 29.5528 25.964 29.4721 25.5546C29.3914 25.1452 29.6515 24.7418 30.0531 24.6535L30.3453 26.136ZM33.3266 24.787C33.7163 24.9102 33.9301 25.3346 33.8041 25.7349C33.6781 26.1351 33.2601 26.3597 32.8704 26.2365L33.3266 24.787ZM35.0341 27.5955C34.7447 27.3033 34.745 26.8232 35.0348 26.5231C35.3246 26.2231 35.7941 26.2166 36.0836 26.5087L35.0341 27.5955ZM37.8995 29.1337C38.0815 29.5062 37.9317 29.9633 37.5648 30.1548C37.1979 30.3462 36.7529 30.1994 36.5708 29.8269L37.8995 29.1337ZM37.5273 32.4805C37.4227 32.0772 37.6589 31.6589 38.0549 31.5462C38.4509 31.4336 38.8567 31.6692 38.9613 32.0726L37.5273 32.4805ZM39.4164 35.181C39.4067 35.5997 39.0669 35.936 38.6575 35.932C38.248 35.9279 37.924 35.5852 37.9337 35.1664L39.4164 35.181ZM37.4576 37.774C37.586 37.3745 38.0053 37.1525 38.3943 37.2782C38.7832 37.4038 38.9944 37.8296 38.866 38.2291L37.4576 37.774ZM37.6784 41.0051C37.4831 41.376 37.0329 41.519 36.6729 41.3245C36.3129 41.13 36.1794 40.6717 36.3747 40.3008L37.6784 41.0051ZM34.9269 42.6878C35.1628 42.3421 35.6254 42.2533 35.9602 42.4896C36.2951 42.7259 36.3754 43.1978 36.1396 43.5435L34.9269 42.6878ZM34.3792 45.8998C34.1161 46.2245 33.6483 46.2733 33.3345 46.0088C33.0206 45.7442 32.9795 45.2666 33.2426 44.9419L34.3792 45.8998ZM31.3924 47.074C31.6758 46.7676 32.1452 46.7506 32.441 47.036C32.7367 47.3215 32.7468 47.8013 32.4634 48.1078L31.3924 47.074ZM30.4256 50.1896C30.1259 50.4793 29.6566 50.4691 29.3775 50.1667C29.0983 49.8643 29.1149 49.3843 29.4146 49.0945L30.4256 50.1896ZM27.3311 51.0056C27.6452 50.7323 28.1129 50.768 28.3758 51.0854C28.6386 51.4027 28.5971 51.8815 28.283 52.1548L27.3311 51.0056ZM26.0404 54.0017C25.7121 54.2569 25.2474 54.1945 25.0025 53.8623C24.7576 53.5302 24.8252 53.0542 25.1535 52.799L26.0404 54.0017ZM22.8854 54.4457C23.23 54.2144 23.6888 54.31 23.9101 54.6591C24.1315 55.0083 24.0315 55.4788 23.6869 55.7101L22.8854 54.4457ZM23.537 2.076C23.9255 2.38003 24.3061 2.68461 24.6791 2.98964L23.7427 4.1792C23.3779 3.88085 23.0055 3.5828 22.6251 3.28515L23.537 2.076ZM26.8789 4.87253C27.6172 5.53444 28.3205 6.19732 28.9899 6.86002L27.9505 7.95679C27.2987 7.31144 26.613 6.66512 25.8923 6.01902L26.8789 4.87253ZM30.9965 8.95562C31.6704 9.69931 32.3027 10.4412 32.895 11.1798L31.7429 12.1513C31.1695 11.4364 30.5564 10.717 29.902 9.99479L30.9965 8.95562ZM34.6524 13.5248C35.23 14.3528 35.758 15.1741 36.2388 15.9864L34.9669 16.7849C34.5056 16.0054 33.9977 15.2153 33.4408 14.417L34.6524 13.5248ZM37.6394 18.5959C38.0866 19.524 38.4719 20.4362 38.7985 21.3286L37.4085 21.8777C37.0995 21.0335 36.7337 20.1668 36.3071 19.2816L37.6394 18.5959ZM39.6664 24.1878C39.9134 25.2185 40.0788 26.2138 40.1685 27.1662L38.6921 27.3325C38.6096 26.4564 38.4567 25.5326 38.2256 24.5683L39.6664 24.1878ZM40.1899 30.2247C40.0924 31.3312 39.876 32.3539 39.5509 33.273L38.1569 32.7751C38.4336 31.9928 38.6254 31.1003 38.7127 30.1097L40.1899 30.2247ZM37.9695 36.0521C37.2194 36.9071 36.303 37.5307 35.2593 37.8642L34.8351 36.4172C35.6013 36.1723 36.2899 35.7114 36.8718 35.0482L37.9695 36.0521ZM32.067 37.9927C31.5752 37.8898 31.0754 37.7332 30.5706 37.5222L31.1482 36.1171C31.575 36.2955 31.9875 36.4238 32.3837 36.5066L32.067 37.9927ZM30.5706 37.5222C30.0728 37.3142 29.6101 37.0952 29.1812 36.8664L29.8816 35.5196C30.2678 35.7255 30.6892 35.9253 31.1482 36.1171L30.5706 37.5222ZM26.6232 35.0321C25.7375 34.1541 25.172 33.1983 24.8983 32.2145L26.3253 31.7806C26.5199 32.48 26.936 33.215 27.6633 33.936L26.6232 35.0321ZM25.0946 28.7785C25.5078 27.7295 26.2195 26.8044 27.1003 26.0882L28.0134 27.2702C27.3139 27.839 26.7743 28.5538 26.4693 29.328L25.0946 28.7785ZM30.0531 24.6535C31.1042 24.4224 32.227 24.4394 33.3266 24.787L32.8704 26.2365C32.0308 25.9711 31.1669 25.9554 30.3453 26.136L30.0531 24.6535ZM36.0836 26.5087C36.7638 27.1954 37.3774 28.0653 37.8995 29.1337L36.5708 29.8269C36.1115 28.8868 35.5879 28.1544 35.0341 27.5955L36.0836 26.5087ZM38.9613 32.0726C39.0858 32.5529 39.1975 33.0587 39.2952 33.591L37.8373 33.8911C37.7459 33.3931 37.6421 32.9233 37.5273 32.4805L38.9613 32.0726ZM39.2952 33.591C39.3908 34.1116 39.4289 34.643 39.4164 35.181L37.9337 35.1664C37.9439 34.7256 37.9124 34.3001 37.8373 33.8911L39.2952 33.591ZM38.866 38.2291C38.57 39.1504 38.1655 40.08 37.6784 41.0051L36.3747 40.3008C36.8279 39.44 37.1941 38.594 37.4576 37.774L38.866 38.2291ZM36.1396 43.5435C35.5973 44.3387 35.0057 45.1267 34.3792 45.8998L33.2426 44.9419C33.8456 44.1978 34.4114 43.4438 34.9269 42.6878L36.1396 43.5435ZM32.4634 48.1078C31.8012 48.824 31.1177 49.5203 30.4256 50.1896L29.4146 49.0945C30.0874 48.4439 30.7508 47.768 31.3924 47.074L32.4634 48.1078ZM28.283 52.1548C27.5264 52.8132 26.7735 53.4319 26.0404 54.0017L25.1535 52.799C25.864 52.2468 26.5952 51.6459 27.3311 51.0056L28.283 52.1548ZM23.6869 55.7101C23.2604 55.9963 22.8478 56.2593 22.4532 56.4965L21.715 55.1919C22.0859 54.9689 22.4774 54.7195 22.8854 54.4457L23.6869 55.7101Z"
                  fill="white"
                />
              </svg>
            </span>
          )}
          <Button
            onClick={() => setDonationType("monthly")}
            parentClassName="w-full"
            className="!w-full"
            audience={donationType === "monthly" ? "ALL" : "USER"}
            level={donationType === "monthly" ? "PRIMARY" : "SECONDARY"}
            size="LARGE"
            icon={
              <svg xmlns="http://www.w3.org/2000/svg" width="26" height="27" viewBox="0 0 26 27" fill="none">
                <path
                  d="M21.0848 4.827C18.1796 3.045 15.6441 3.76312 14.1209 4.90701C13.4963 5.37604 13.1841 5.61055 13.0003 5.61055C12.8166 5.61055 12.5044 5.37604 11.8797 4.90701C10.3566 3.76312 7.82101 3.045 4.91588 4.827C1.10323 7.16569 0.240522 14.8811 9.03482 21.3904C10.7099 22.6301 11.5474 23.25 13.0003 23.25C14.4533 23.25 15.2908 22.6301 16.9659 21.3904C25.7601 14.8811 24.8974 7.16569 21.0848 4.827Z"
                  fill="white"
                  stroke="white"
                  strokeWidth="1.5"
                  strokeLinecap="round"
                />
              </svg>
            }
          >
            Give Monthly
          </Button>
        </div>

        <div className="flex rounded-[15px] py-3 px-[19px] bg-[#3E2946]">
          <h1 className="text-base 2xl:text-lg 3xl:text-xl lg:max-w-[90%] w-full text-primary-user font-montserrat">
            Giving monthly is an easy, effective way to be a hero for nature 365 days a year!
          </h1>
        </div>
      </div>

      <div className="grid grid-cols-2 !gap-4">
        {amounts.map((amount, index) => (
          <button
            key={index}
            onClick={() => setSelectedAmount(amount.value)}
            className={`${
              selectedAmount === amount.value ? "bg-gradient-custom" : "bg-[#16263B]"
            } transition-colors font-montserrat text-white py-4 rounded-[13px]`}
            aria-pressed={selectedAmount === amount.value}
          >
            <div className="text-xl !mb-1 font-bold">
              ${amount.value}/{donationType === "monthly" ? "mo" : "once"}
            </div>
            <div className="text-base">{amount.label}</div>
          </button>
        ))}

        <button className={`${customAmount ? "border-[#D8D8D8] border" : ""} w-full h-full bg-[#16263B] rounded-xl flex items-center px-6`}>
          <span className="text-white text-xl font-medium">$</span>
          <input
            type="text"
            value={customAmount}
            onChange={handleCustomAmountChange}
            placeholder="Other/mo"
            className="bg-transparent text-white text-xl w-full focus:outline-none ml-2 placeholder-gray-400"
            aria-label="Custom donation amount"
          />
        </button>
      </div>
      <DonationSelector />

      <Button asChild audience="USER" level="PRIMARY" className="w-full overflow-hidden cursor-pointer" size="LARGE">
        {" "}
        Donate ${selectedAmount.toLocaleString()} {donationType === "monthly" ? "Monthly" : "Once"}
      </Button>
    </>
  );
};

export default DonationControls;
